<#
// title: Base Controller
// hash: 60ec3075bd09082deb80763dc97a02f9
// version: 3.0
#>
<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="$(binDir)Raml.Tools.dll" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="Raml.Tools" #>
<#@ import namespace="Raml.Tools.WebApiGenerator" #>
<#@ import namespace="System.Linq" #>
<#@ parameter name="controllerObject" type="Raml.Tools.WebApiGenerator.ControllerObject" #>
<#@ parameter name="hasModels" type="System.Boolean" #>
<#@ parameter name="useAsyncMethods" type="System.Boolean" #>
<#@ output extension=".cs" #>

using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using System.Web.Http;
using System.Web.Http.Description;
<# if(hasModels){ #>
using $(namespace).Models;
<# } #>

// Do not modify this file. This code was generated by RAML Web Api 2 Scaffolder

namespace $(namespace)
{
    [RoutePrefix("<#= controllerObject.PrefixUri #>")]
    public partial class <#= controllerObject.Name #>Controller : ApiController
    {

<#
		foreach (var method in controllerObject.Methods)
		{
#>

        <#= method.XmlComment ?? string.Empty #>
<#
    if (method.ReturnType != null && method.ReturnType != "string")
    {
#>
        [ResponseType(typeof(<#= method.ReturnType #>))]
<#
    }
#>
        [Http<#= method.Verb #>]
        [Route("<#= method.Url #>")]
<# if(useAsyncMethods) { #>
        public virtual async Task<IHttpActionResult> <#= method.Name #>Base(<#= method.ParametersString #>)
<# } else { #>
        public virtual IHttpActionResult <#= method.Name #>Base(<#= method.ParametersString #>)
<# } #>
        {
            // Do not modify this code
            return <#= useAsyncMethods ? "await" : "" #> ((I<#= controllerObject.Name #>Controller)this).<#= method.Name #>(<#= method.ParametersCallString #>);
        }
<#

		}
#>
    }
}
