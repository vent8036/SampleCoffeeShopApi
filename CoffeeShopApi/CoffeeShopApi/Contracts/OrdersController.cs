// Template: Base Controller (ApiControllerBase.t4) version 3.0

using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using System.Web.Http;
using System.Web.Http.Description;
using CoffeeShopApi.CoffeeShopApiRaml.Models;

// Do not modify this file. This code was generated by RAML Web Api 2 Scaffolder

namespace CoffeeShopApi.CoffeeShopApiRaml
{
    [RoutePrefix("orders")]
    public partial class OrdersController : ApiController
    {


        /// <summary>
		/// All orders
		/// </summary>
		/// <param name="offset">Offset the list of returned results by this amount. Default is zero.</param>
		/// <param name="limit">Number of items to retrieve. Default is 5, maximum is 10.</param>
		/// <returns>OrdersGetOKResponseContent</returns>
        [ResponseType(typeof(OrdersGetOKResponseContent))]
        [HttpGet]
        [Route("")]
        public virtual IHttpActionResult GetBase([FromUri] int offset,[FromUri] int limit)
        {
            // Do not modify this code
            return  ((IOrdersController)this).Get(offset,limit);
        }

        /// <summary>
		/// Create order
		/// </summary>
		/// <param name="orderspostrequestcontent"></param>
        [HttpPost]
        [Route("")]
        public virtual IHttpActionResult PostBase(Models.OrdersPostRequestContent orderspostrequestcontent)
        {
            // Do not modify this code
            return  ((IOrdersController)this).Post(orderspostrequestcontent);
        }

        /// <summary>
		/// Order details
		/// </summary>
		/// <param name="orderId">The unique id of the requested order</param>
		/// <returns>OrdersOrderIdGetOKResponseContent</returns>
        [ResponseType(typeof(OrdersOrderIdGetOKResponseContent))]
        [HttpGet]
        [Route("{orderId}")]
        public virtual IHttpActionResult GetByOrderIdBase([FromUri] string orderId)
        {
            // Do not modify this code
            return  ((IOrdersController)this).GetByOrderId(orderId);
        }

        /// <summary>
		/// Update order
		/// </summary>
		/// <param name="ordersorderidputrequestcontent"></param>
		/// <param name="orderId">The unique id of the requested order</param>
		/// <returns>OrdersOrderIdPutOKResponseContent</returns>
        [ResponseType(typeof(OrdersOrderIdPutOKResponseContent))]
        [HttpPut]
        [Route("{orderId}")]
        public virtual IHttpActionResult PutBase(Models.OrdersOrderIdPutRequestContent ordersorderidputrequestcontent,[FromUri] string orderId)
        {
            // Do not modify this code
            return  ((IOrdersController)this).Put(ordersorderidputrequestcontent,orderId);
        }
    }
}
